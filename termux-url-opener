#! /bin/bash
termux-wake-lock
clear

update () {
  pkg upgrade -y
  python -m pip install --upgrade pip
  pip install -U yt-dlp
  pkg autoclean
}

audioPodcast () {
  title=`yt-dlp --print filename -o "%(title)s.m4a" $url --restrict-filenames`
  cd ~/storage/music/Podcasts/
  yt-dlp -f 'ba' -x --audio-format m4a $url -o '%(title)s.m4a' --sponsorblock-remove all --throttled-rate $rate --concurrent-fragments $fragments --retries infinite --embed-thumbnail
}

audioMusic () {
  title=`yt-dlp --print filename -o "%(title)s.m4a" $url --restrict-filenames`
  cd ~/storage/music/Music/
  yt-dlp -f 'ba' -x --audio-format m4a $url -o '%(title)s.%(ext)s' --sponsorblock-remove all --throttled-rate $rate --concurrent-fragments $fragments --retries infinite --embed-thumbnail
}

video () {
  title=`yt-dlp --print filename -o "%(title)s" $url --restrict-filenames`
  cd ~/storage/movies/Videos/
	yt-dlp -f "bv+ba/b" $url -o '%(title)s.%(ext)s' --sponsorblock-remove all --throttled-rate $rate --concurrent-fragments $fragments --retries infinite --embed-thumbnail --write-subs --write-auto-subs --embed-subs --compat-options no-keep-subs
}



whatUpdate () {
  echo "1. Only Update"
  echo "a. Update and Audio"
  echo "b. Update and Video"
  read m
  if [ "$m" = '1' ]; then
    update
  else
  if [ "$m" = "a" ]; then
    echo "a. Podcast"
    echo "b. Music"
    read x
    if [ "$x" = "a" ]; then
      update
      audioPodcast
    else
    if [ "$x" = "b" ]; then
      update
      audioMusic
    else
      :
    fi
    fi
  else
  if [ "$m" = "b" ]; then
    update
    video
  else
    cd ~/bin
  	./termux-url-opener $url
  fi
  fi
  fi
}

url=$1
rate=150K
fragments=10

echo "1. Update"
echo "a. Audio"
echo "b. Video"
read n

if [ "$n" = '1' ]; then
	whatUpdate
else

if [ "$n" = "a" ]; then
    echo "a. Podcast"
    echo "b. Music"
    read x
    if [ "$x" = "a" ]; then
      audioPodcast
    else
    if [ "$x" = "b" ]; then
      audioMusic
    else
      :
    fi
    fi
else

if [ "$n" = "b" ]; then
	video
fi
fi
fi
termux-wake-unlock
